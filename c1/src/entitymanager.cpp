#include "entitymanager.hpp"
#include <cassert>

///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////
Entity& 
EntityManager::newEntity() noexcept {
   assert(alive_ < MAX_ENTITIES);
   
   alive_ += 1;
   return entities_[alive_ - 1];
}

///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////
Entity* 
EntityManager::getFirstEntityByTags(Entity::Tag const ts) noexcept {
   for(auto& e : entities_) {
      if ( e.hasTags(ts) )
         return &e;
   }
   return nullptr;
}

///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////
Entity const* 
EntityManager::getFirstEntityByTags(Entity::Tag const ts) const noexcept {
   for(auto const& e : entities_) {
      if ( e.hasTags(ts) )
         return &e;
   }
   return nullptr;
}